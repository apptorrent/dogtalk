/*! built for dogtalk 2014-07-03 */
angular.module("dogtalk",["ngSockethubClient","ngSockethubRemoteStorage","ngRemoteStorage","ngChat","ngMessages"]).config(["$routeProvider",function(a){a.when("/settings",{templateUrl:"settings.html",controller:"settingsCtrl"}).when("/",{templateUrl:"talk.html",controller:"talkCtrl"}).when("/talk/:address",{templateUrl:"talk.html",controller:"talkCtrl"}).otherwise({redirectTo:"/"})}]).run(["RemoteStorageConfig",function(a){a.modules=[["sockethub","rw",{cache:!1}],["messages","rw",{cache:!1}],["contacts","rw",{cache:!1}]]}]).run(["$rootScope","RS","$timeout",function(a,b,c){b.isConnected()||c(function(){b.isConnected()||a.$broadcast("message",{message:"remotestorage-connect",timeout:!1})},1e3)}]).run(["SockethubBootstrap",function(a){a.run({host:"silverbucket.net",port:"443",path:"/sockethub",tls:!0,secret:"1234567890"})}]).controller("appCtrl",["$scope","$rootScope","$route","$location",function(a,b,c,d){b.$on("$routeChangeStart",function(){console.log("routeChangeStart: ",a,b,c,d)}),b.$on("$routeChangeSuccess",function(){console.log("routeChangeSuccess")}),b.$on("$routeChangeError",function(a,b,c,d){console.log("routeChangeError: ",d)})}]).controller("navCtrl",["$scope","$route","$routeParams","$location",function(a,b,c,d){a.navClass=function(a){var b=d.path().substring(1)||"home";return a===b?"active":""}}]).controller("settingsCtrl",["$scope","$route","$routeParams","$rootScope",function(a,b,c,d){a.sockethubSettings=function(){d.$broadcast("showModalSockethubSettings",{locked:!1})},a.xmppSettings=function(){d.$broadcast("showModalSettingsXmpp",{locked:!1})},a.ircSettings=function(){d.$broadcast("showModalSettingsIrc",{locked:!1})}}]).controller("talkCtrl",["$scope","$route","$routeParams","$location","Chat","$rootScope","ChatSettings",function(a,b,c,d,e,f,g){console.log("--- talkCtrl run "+c.address),a.model={presence:e.presence.data,contacts:e.contacts.data,requests:e.requests.data,settings:g},a.model.current={address:c.address,contact:a.model.contacts[c.address]?a.model.contacts[c.address]:"",conversation:a.model.contacts[c.address]?a.model.contacts[c.address].conversation:[]},console.log("scope.model.current.contact: ",a.model.current),a.$watch("model.contacts",function(a,b){console.log("SCOPE WATCH CONTACTS : ",a,b)}),a.conversationSwitch=function(b){return console.log("---- talkCtrl.conversationSwitch("+b+")"),b!==c.address?"":(a.model.contacts[b]?(a.model.current.contact=a.model.contacts[c.address]?a.model.contacts[c.address]:"",a.model.current.conversation=a.model.contacts[b].conversation,console.log("currentConversation: ",a.model.current.conversation)):console.log("talkCtrl.conversationSwitch() - not in history"),"active")},a.sendMsg=function(b){a.model.saving=!0,e.sendMsg(a.model.current.address,b).then(function(){a.model.sendText="",a.model.saving=!1},function(b){console.log("sendMsg error: ",b),a.model.saving=!1})},a.isFromMe=function(a){return e.isFromMe(a)},a.acceptBuddyRequest=function(b){return console.log("acceptBuddyRequest: "+b),a.model.saving=!0,a.model.requests[b]?void e.requests.accept(b).then(function(){return a.model.saving=!1,delete a.model.requests[b],!0},function(){return a.model.saving=!1,!1}):(a.model.saving=!1,!1)}}]);